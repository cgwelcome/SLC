start BOF compilation_unit EOF

literal OCT_INT_LITERAL
literal DEC_INT_LITERAL
literal HEX_INT_LITERAL
literal FLOATING_POINT_LITERAL
literal BOOLEAN_LITERAL
literal CHAR_LITERAL
literal STRING_LITERAL
literal NULL_LITERAL

type primitive_type
type reference_type

primitive_type numeric_type
primitive_type BOOLEAN_LITERAL

numeric_type intergral_type
numeric_type floating_point_type

intergral_type BYTE
intergral_type SHORT
intergral_type INT
intergral_type LONG
intergral_type CHAR

floating_point_type FLOAT
floating_point_type DOUBLE

reference_type class_or_interface_type
reference_type array_type

class_or_interface_type name

class_type class_or_interface_type

interface_type class_or_interface_type

array_type primitive_type LBRKT RBRKT
array_type name LBRKT RBRKT
array_type array_type LBRKT RBRKT

name simple_name
name qualified_name

simple_name IDENTIFIER

qualified_name name DOT IDENTIFIER

compilation_unit package_declaration import_declarations type_declarations
compilation_unit import_declarations type_declarations
compilation_unit package_declaration type_declarations
compilation_unit package_declaration import_declarations
compilation_unit type_declarations
compilation_unit package_declaration
compilation_unit import_declarations
compilation_unit

import_declarations import_declaration
import_declarations import_declarations import_declaration

type_declarations type_declaration
type_declarations type_declarations type_declaration

package_declaration PACKAGE name SEMI

import_declaration single_type_import_declaration
import_declaration type_import_on_demand_declaration

single_type_import_declaration IMPORT name SEMI

type_import_on_demand_declaration IMPORT name DOT MULTIPLICATION SEMI

type_declaration class_declaration
type_declaration interface_declaration
type_declaration SEMI

modifiers modifier
modifiers modifiers modifier

modifier modifier_group_1
modifier modifier_group_2
modifier modifier_group_3

modifier_group_1 PUBLIC
modifier_group_1 PRIVATE
modifier_group_1 PROTECTED

modifier_group_2 STATIC

modifier_group_3 ABSTRACT
modifier_group_3 FINAL
modifier_group_3 NATIVE
modifier_group_3 SYNCHRONIZED
modifier_group_3 TRANSIENT
modifier_group_3 VOLATILE

class_declaration modifiers CLASS IDENTIFIER super interfaces class_body
class_declaration CLASS IDENTIFIER super interfaces class_body
class_declaration modifiers CLASS IDENTIFIER interfaces class_body
class_declaration modifiers CLASS IDENTIFIER super class_body
class_declaration CLASS IDENTIFIER interfaces class_body
class_declaration CLASS IDENTIFIER super class_body
class_declaration modifiers CLASS IDENTIFIER class_body
class_declaration CLASS IDENTIFIER class_body

super EXTENDS class_type

interfaces IMPLEMENTS interface_type_list

interface_type_list interface_type
interface_type_list interface_type_list COMMA interface_type

class_body LBRAC class_body_declarations RBRAC
class_body LBRAC RBRAC

class_body_declarations class_body_declaration
class_body_declarations class_body_declarations class_body_declaration

class_body_declaration class_member_declaration
class_body_declaration static_initializer
class_body_declaration constructor_declaration

class_member_declaration field_declaration
class_member_declaration method_declaration

field_declaration modifiers type variable_declarators SEMI
field_declaration type variable_declarators SEMI

variable_declarators variable_declarator
variable_declarators variable_declarators COMMA variable_declarator

variable_declarator variable_declarator_id
variable_declarator variable_declarator_id ASSIGN variable_initializer

variable_declarator_id IDENTIFIER
variable_declarator_id variable_declarator_id LBRKT RBRKT

variable_initializer expression
variable_initializer array_initializer

method_declaration method_header method_body

method_header modifiers type method_declarator throws
method_header type method_declarator throws
method_header modifiers type method_declarator
method_header type method_declarator

method_header modifiers VOID method_declarator throws
method_header VOID method_declarator throws
method_header modifiers VOID method_declarator
method_header VOID method_declarator

method_declarator IDENTIFIER LPAREN formal_parameter_list RPAREN
method_declarator IDENTIFIER LPAREN RPAREN
method_declarator method_declarator LBRKT RBRKT

formal_parameter_list formal_parameter
formal_parameter_list formal_parameter_list COMMA formal_parameter

formal_parameter type variable_declarator_id

throws THROWS class_type_list

class_type_list class_type
class_type_list class_type_list COMMA class_type

method_body block
method_body SEMI

static_initializer STATIC block

constructor_declaration modifiers constructor_declarator throws constructor_body
constructor_declaration constructor_declarator throws constructor_body
constructor_declaration modifiers constructor_declarator constructor_body
constructor_declaration constructor_declarator constructor_body

constructor_declarator simple_name LPAREN formal_parameter_list RPAREN
constructor_declarator simple_name LPAREN RPAREN

constructor_body LBRAC explicit_constructor_invocation block_statements RBRAC
constructor_body LBRAC RBRAC

explicit_constructor_invocation THIS LPAREN argument_list RPAREN SEMI
explicit_constructor_invocation THIS LPAREN RPAREN SEMI

explicit_constructor_invocation SUPER LPAREN argument_list RPAREN SEMI
explicit_constructor_invocation SUPER LPAREN RPAREN SEMI

interface_declaration modifiers INTERFACE IDENTIFIER extends_interfaces interface_body
interface_declaration INTERFACE IDENTIFIER extends_interfaces interface_body
interface_declaration modifiers INTERFACE IDENTIFIER interface_body
interface_declaration INTERFACE IDENTIFIER interface_body

extends_interfaces EXTENDS interface_type
extends_interfaces extends_interfaces COMMA interface_type

interface_body LBRAC interface_member_declarations RBRAC
interface_body LBRAC RBRAC

interface_member_declarations interface_member_declaration
interface_member_declarations interface_member_declarations interface_declaration

interface_member_declaration constant_declaration
interface_member_declaration abstract_method_declaration

constant_declaration field_declaration

abstract_method_declaration method_header SEMI

array_initializer LBRAC variable_initializers COMMA RBRAC
array_initializer LBRAC COMMA RBRAC
array_initializer LBRAC variable_initializers RBRAC
array_initializer LBRAC RBRAC

variable_initializers variable_initializer
variable_initializers variable_initializers COMMA variable_initializer

block LBRAC block_statements RBRAC
block LBRAC RBRAC

block_statements block_statement
block_statements block_statements block_statement

block_statement local_variable_declaration_statement
block_statement statement

local_variable_declaration_statement local_variable_declaration SEMI

local_variable_declaration type variable_declarators

statement statement_without_trailing_substatement
statement labeled_statement
statement if_then_statement
statement if_then_else_statement
statement while_statement
statement for_statement

statement_no_short_if statement_without_trailing_substatement
statement_no_short_if labeled_statement_no_short_if
statement_no_short_if if_then_else_statement_no_short_if
statement_no_short_if while_statement_no_short_if
statement_no_short_if for_statement_no_short_if

statement_without_trailing_substatement block
statement_without_trailing_substatement empty_statement
statement_without_trailing_substatement expression_statement
statement_without_trailing_substatement switch_statement
statement_without_trailing_substatement do_statement
statement_without_trailing_substatement break_statement
statement_without_trailing_substatement continue_statement
statement_without_trailing_substatement return_statement
statement_without_trailing_substatement synchronized_statement
statement_without_trailing_substatement throw_statement
statement_without_trailing_substatement try_statement

empty_statement SEMI

labeled_statement IDENTIFIER COLON statement

labeled_statement_no_short_if IDENTIFIER COLON statement_no_short_if

expression_statement statement_expression SEMI

statement_expression assignment
statement_expression pre_increment_expression
statement_expression pre_decrement_expression
statement_expression post_increment_expression
statement_expression post_decrement_expression
statement_expression method_invocation
statement_expression class_instance_creation_expression

if_then_statement if LPAREN expression RPAREN statement

if_then_else_statement if LPAREN expression RPAREN statement_no_short_if else statement

if_then_else_statement_no_short_if if LPAREN expression RPAREN statement_no_short_if else statement_no_short_if

switch_statement SWITCH LPAREN expression RPAREN switch_block

switch_block LBRAC switch_block_statement_groups switch_labels RBRAC
switch_block LBRAC switch_labels RBRAC
switch_block LBRAC switch_block_statement_groups RBRAC
switch_block LBRAC RBRAC

switch_block_statement_groups switch_block_statement_group
switch_block_statement_groups switch_block_statement_groups switch_block_statement_group

switch_block_statement_group switch_labels block_statements

switch_labels switch_label
switch_labels switch_labels switch_label

switch_label CASE constant_expression COLON
switch_label DEFAULT COLON

while_statement WHILE LPAREN expression RPAREN statement

while_statement_no_short_if WHILE LPAREN expression RPAREN statement_no_short_if

do_statement DO statement while LPAREN expression RPAREN SEMI

for_statement FOR LPAREN for_init SEMI expression SEMI for_update RPAREN statement
for_statement FOR LPAREN SEMI expression SEMI for_update RPAREN statement
for_statement FOR LPAREN for_init SEMI SEMI for_update RPAREN statement
for_statement FOR LPAREN for_init SEMI expression SEMI RPAREN statement
for_statement FOR LPAREN for_init SEMI SEMI RPAREN statement
for_statement FOR LPAREN SEMI SEMI for_update RPAREN statement
for_statement FOR LPAREN SEMI expression SEMI RPAREN statement
for_statement FOR LPAREN SEMI SEMI RPAREN statement

for_statement_no_short_if FOR LPAREN for_init SEMI expression SEMI for_update RPAREN statement_no_short_if
for_statement FOR LPAREN SEMI expression SEMI for_update RPAREN statement_no_short_if
for_statement FOR LPAREN for_init SEMI SEMI for_update RPAREN statement_no_short_if
for_statement FOR LPAREN for_init SEMI expression SEMI RPAREN statement_no_short_if
for_statement FOR LPAREN for_init SEMI SEMI RPAREN statement_no_short_if
for_statement FOR LPAREN SEMI SEMI for_update RPAREN statement_no_short_if
for_statement FOR LPAREN SEMI expression SEMI RPAREN statement_no_short_if
for_statement FOR LPAREN SEMI SEMI RPAREN statement_no_short_if

for_init statement_expression_list
for_init local_variable_declaration

for_update statement_expression_list

statement_expression_list statement_expression
statement_expression_list statement_expression_list COMMA statement_expression

break_statement BREAK IDENTIFIER SEMI
break_statement BREAK SEMI

continue_statement CONTINUE IDENTIFIER SEMI
continue_statement CONTINUE SEMI

return_statement RETURN expression SEMI
return_statement RETURN SEMI

throw_statement THROW expression SEMI

synchronized_statement SYNCHRONIZED LPAREN expression RPAREN block

try_statement TRY block catches
try_statement TRY block catches finally
try_statement TRY block finally

catches catch_clause
catches catches catch_clause

catch_clause CATCH LPAREN formal_parameter RPAREN block

finally FINALLY block

primary primary_no_new_array
primary array_creation_expression

primary_no_new_array literal
primary_no_new_array THIS
primary_no_new_array LPAREN Expression RPAREN
primary_no_new_array class_instance_creation_expression
primary_no_new_array field_access
primary_no_new_array method_invocation
primary_no_new_array array_access


class_instance_creation_expression NEW class_type LPAREN argument_list RPAREN
class_instance_creation_expression NEW class_type LPAREN RPAREN

argument_list expression
argument_list argument_list COMMA expression

array_creation_expression NEW primitive_type dim_exprs
array_creation_expression NEW primitive_type dim_exprs dims
array_creation_expression NEW class_or_interface_type dim_exprs
array_creation_expression NEW class_or_interface_type dim_exprs dims

dim_exprs dim_expr
dim_exprs dim_exprs dim_expr

dim_expr LBRKT expression RBRKT

dims LBRKT RBRKT
dims dims LBRKT RBRKT

field_access primary DOT IDENTIFIER
field_access super DOT IDENTIFIER

method_invocation name LPAREN RPAREN
method_invocation name LPAREN argument_list RPAREN
method_invocation primary DOT IDENTIFIER LPAREN RPAREN
method_invocation primary DOT IDENTIFIER LPAREN argument_list RPAREN
method_invocation SUPER DOT IDENTIFIER LPAREN RPAREN
method_invocation SUPER DOT IDENTIFIER LPAREN argument_list RPAREN

array_access name LBRKT expression RBRKT
array_access primary_no_new_array LBRKT expression RBRKT

postfix_expression primary
postfix_expression name
postfix_expression post_increment_expression
postfix_expression post_decrement_expression

post_increment_expression postfix_expression INCREMENT

post_decrement_expression postfix_expression DECREMENT

unary_expression pre_increment_expression
unary_expression pre_decrement_expression
unary_expression PLUS unary_expression
unary_expression MINUS unary_expression
unary_expression unary_expression_not_plus_minus

pre_increment_expression INCREMENT unary_expression

pre_decrement_expression DECREMENT unary_expression

unary_expression_not_plus_minus postfix_expression
unary_expression_not_plus_minus TILDA unary_expression
unary_expression_not_plus_minus EXCLAMATION unary_expression
unary_expression_not_plus_minus cast_expression

cast_expression LPAREN primitive_type RPAREN unary_expression
cast_expression LPAREN primitive_type dims RPAREN unary_expression
cast_expression LPAREN expression RPAREN unary_expression_not_plus_minus
cast_expression LPAREN Name Dims RPAREN unary_expression_not_plus_minus

multiplicative_expression unary_expression
multiplicative_expression multiplicative_expression MULTIPLICATION unary_expression
multiplicative_expression multiplicative_expression DIVISION unary_expression
multiplicative_expression multiplicative_expression MODULUS unary_expression

additive_expression multiplicative_expression
additive_expression additive_expression ADDITION multiplicative_expression
additive_expression additive_expression SUBTRACTION multiplicative_expression

shift_expression additive_expression
shift_expression shift_expression LEFT_SHIFT additive_expression
shift_expression shift_expression RIGHT_SHIFT additive_expression
shift_expression shift_expression UNSIGNED_LEFT_SHIFT additive_expression

relational_expression shift_expression
relational_expression relational_expression LESSER shift_expression
relational_expression relational_expression GREATER shift_expression
relational_expression relational_expression LESSER_OR_EQUAL shift_expression
relational_expression relational_expression GREATER_OR_EQUAL shift_expression
relational_expression relational_expression INSTANCEOF reference_type

equality_expression relational_expression
equality_expression equality_expression EQUAL relational_expression
equality_expression equality_expression NOT_EQUAL relational_expression

and_expression equality_expression
and_expression and_expression BITWISEAND equality_expression

exclusive_or_expression and_expression
exclusive_or_expression exclusive_or_expression BITWISEXOR and_expression

inclusive_or_expression exclusive_or_expression
inclusive_or_expression inclusive_or_expression BITWISEOR exclusive_or_expression

conditional_and_expression inclusive_or_expression
conditional_and_expression conditional_and_expression AND inclusive_or_expression

conditional_or_expression conditional_and_expression
conditional_or_expression conditional_or_expression OR conditional_and_expression

conditional_expression conditional_or_expression
conditional_expression conditional_or_expression QUESTION expression COLON conditional_expression

assignment_expression conditional_expression
assignment_expression assignment

assignment left_hand_side assignment_operator assignment_expression

left_hand_side name
left_hand_side field
left_hand_side array_access

assignment_operator ASSIGN
assignment_operator MULTIPLY_EQUALS
assignment_operator DIVISION_EQUALS
assignment_operator MODULUS_EQUALS
assignment_operator PLUS_EQUALS
assignment_operator MINUS_EQUALS
assignment_operator LEFTSHIFT_EQUALS
assignment_operator RIGHTSHIFT_EQUALS
assignment_operator UNSIGNED_RIGHTSHIFT_EQUALS
assignment_operator BITWISEAND_EQUALS
assignment_operator BITWISEXOR_EQUALS
assignment_operator BITWISEOR_EQUALS

expression assignment_expression

constant_expression expression
