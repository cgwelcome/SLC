BOF BOF
PUBLIC public
CLASS class
ID J1_01
LBRACE {
PUBLIC public
ID J1_01
LPAREN (
RPAREN )
LBRACE {
RBRACE }
PUBLIC public
STATIC static
INT int
ID test
LPAREN (
RPAREN )
LBRACE {
INT int
ID r1
ASSIGN =
ID J1_01
DOT .
ID m0
LPAREN (
DEC_INT_LITERAL 0
RPAREN )
SEMI ;
INT int
ID r2
ASSIGN =
ID J1_01
DOT .
ID m0
LPAREN (
DEC_INT_LITERAL 1
RPAREN )
SEMI ;
INT int
ID r3
ASSIGN =
ID J1_01
DOT .
ID m0
LPAREN (
DEC_INT_LITERAL 100
RPAREN )
SEMI ;
INT int
ID r4
ASSIGN =
ID J1_01
DOT .
ID m1
LPAREN (
DEC_INT_LITERAL 0
RPAREN )
SEMI ;
INT int
ID r5
ASSIGN =
ID J1_01
DOT .
ID m1
LPAREN (
DEC_INT_LITERAL 1
RPAREN )
SEMI ;
INT int
ID r6
ASSIGN =
ID J1_01
DOT .
ID m1
LPAREN (
DEC_INT_LITERAL 100
RPAREN )
SEMI ;
INT int
ID r
ASSIGN =
DEC_INT_LITERAL 0
SEMI ;
IF if
LPAREN (
ID r1
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 9
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID r2
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 6
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID r3
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 6
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID r4
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 6
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID r5
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 9
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID r6
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 6
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
RETURN return
DEC_INT_LITERAL 117
ADDITION +
ID r
SEMI ;
RBRACE }
PUBLIC public
STATIC static
INT int
ID m0
LPAREN (
INT int
ID a
RPAREN )
LBRACE {
INT int
ID r
ASSIGN =
DEC_INT_LITERAL 0
SEMI ;
IF if
LPAREN (
ID a
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 0
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID a
EXCLAMATION !
ASSIGN =
DEC_INT_LITERAL 0
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 2
SEMI ;
IF if
LPAREN (
EXCLAMATION !
LPAREN (
ID a
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 0
RPAREN )
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 4
SEMI ;
IF if
LPAREN (
EXCLAMATION !
LPAREN (
ID a
EXCLAMATION !
ASSIGN =
DEC_INT_LITERAL 0
RPAREN )
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 8
SEMI ;
RETURN return
ID r
SEMI ;
RBRACE }
PUBLIC public
STATIC static
INT int
ID m1
LPAREN (
INT int
ID a
RPAREN )
LBRACE {
INT int
ID r
ASSIGN =
DEC_INT_LITERAL 0
SEMI ;
IF if
LPAREN (
ID a
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 1
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 1
SEMI ;
IF if
LPAREN (
ID a
EXCLAMATION !
ASSIGN =
DEC_INT_LITERAL 1
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 2
SEMI ;
IF if
LPAREN (
EXCLAMATION !
LPAREN (
ID a
ASSIGN =
ASSIGN =
DEC_INT_LITERAL 1
RPAREN )
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 4
SEMI ;
IF if
LPAREN (
EXCLAMATION !
LPAREN (
ID a
EXCLAMATION !
ASSIGN =
DEC_INT_LITERAL 1
RPAREN )
RPAREN )
ID r
ASSIGN =
ID r
ADDITION +
DEC_INT_LITERAL 8
SEMI ;
RETURN return
ID r
SEMI ;
RBRACE }
RBRACE }
EOF EOF
